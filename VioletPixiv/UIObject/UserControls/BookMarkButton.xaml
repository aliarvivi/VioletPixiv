<ToggleButton x:Class="VioletPixiv.UIObject.UserControls.BookMarkButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:VioletPixiv.UIObject.UserControls"
             IsChecked="{Binding Path=TargetIllust.IsBookmarked, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"
             Command="{StaticResource BookMarkCommand}"
             CommandParameter="{Binding RelativeSource={RelativeSource Self}}">

    <ToggleButton.Style>
        <Style TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Default Image(Not BookMarked) -->
            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="/VioletPixiv;component/Resources/Images/red_icon/round_favorite_border_red_48dp.png" 
                           Stretch="Uniform"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Click and Change Image(BookMarked) -->
                <Trigger Property="IsChecked" 
                         Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="/VioletPixiv;component/Resources/Images/red_icon/round_favorite_red_48dp.png" 
                                   Stretch="Uniform"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <!-- HandCursor -->
                <Trigger Property="IsMouseOver" 
                         Value="true">
                    <Setter Property="Cursor" 
                            Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </ToggleButton.Style>
</ToggleButton>
